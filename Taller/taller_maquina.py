# -*- coding: utf-8 -*-
"""Taller.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k6HVUDUrUPmrTKq0a0Tm34N9vtduIFWI
"""

class Producto:
    def __init__(self, nombre: str, precio: float, cantidad_disponible: int):
        self.nombre = nombre
        self.precio = precio
        self.cantidad_disponible = cantidad_disponible

    def obtener_info(self):
        return f'Nombre:{self.nombre}, Precio:{self.precio}, Cantidad disponible:{self.cantidad_disponible}'

    def restar_cantidad(self):
        if self.cantidad_disponible > 0:
            self.cantidad_disponible -= 1
            return True
        else:
            return False

    def verificar_disponibilidad(self):
        return self.cantidad_disponible > 0


class Snack(Producto):
    def __init__(self, nombre: str, precio: float, tipo: str):
        super().__init__(nombre, precio, 0)
        self.tipo = tipo

    def obtener_info(self):
        return f"{super().obtener_info()}, Tipo: {self.tipo}"


class Bebida(Producto):
    def __init__(self, nombre: str, precio: float, tamaño: str):
        super().__init__(nombre, precio, 0)
        self.tamaño = tamaño

    def obtener_info(self):
        return f"{super().obtener_info()}, Tamaño: {self.tamaño}"


class MaquinaDispensadora:
    def __init__(self):
        self.lista_productos = []

    def agregar_producto(self, producto):
        self.lista_productos.append(producto)

    def realizar_venta(self, nombre_producto):
        for producto in self.lista_productos:
            if producto.nombre == nombre_producto:
                if producto.verificar_disponibilidad():
                    if producto.restar_cantidad():
                        print(f"Se realizó venta de: {producto.nombre}")
                        return producto.precio
                    else:
                        print(f"No hay suficientes unidades de {producto.nombre}")
                        return 0
                else:
                    print(f"{producto.nombre} agotado")
                    return 0
        print("Producto no existente, intente nuevamente")
        return 0

    def total_ventas(self):
        total = sum(producto.precio for producto in self.lista_productos if producto.cantidad_disponible > 0)
        return total


def main():
    snack1 = Snack("Papas", 3800, "Salado")
    snack2 = Snack("Chocolate", 2500, "Dulce")
    bebida1 = Bebida("Refresco", 4000, "Grande")
    bebida2 = Bebida("Jugo", 3500, 'mediano')

    maquina = MaquinaDispensadora()
    maquina.agregar_producto(snack1)
    maquina.agregar_producto(snack2)
    maquina.agregar_producto(bebida1)
    maquina.agregar_producto(bebida2)

    maquina.realizar_venta("Papas")
    maquina.realizar_venta("Chocolate")
    maquina.realizar_venta("Chocolate")
    maquina.realizar_venta("Refresco")
    maquina.realizar_venta("Jugo")

    print(f"Total de ventas: {maquina.total_ventas()}")


if __name__ == "__main__":
    main()